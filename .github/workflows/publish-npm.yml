name: Publish to npm

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Determine npm dist-tag
        id: dist-tag
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Check if version contains pre-release identifiers
          if [[ "$VERSION" =~ (alpha|beta|rc|next|canary) ]]; then
            # Extract the pre-release tag (e.g., "beta" from "2.5.0-beta.1")
            TAG=$(echo "$VERSION" | sed -E 's/.*-(alpha|beta|rc|next|canary).*/\1/')
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "Publishing pre-release version $VERSION with tag: $TAG"
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "Publishing stable version $VERSION with tag: latest"
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing simply-mcp@${{ steps.dist-tag.outputs.version }} with tag @${{ steps.dist-tag.outputs.tag }}"
          npm publish --tag ${{ steps.dist-tag.outputs.tag }} --provenance --access public
